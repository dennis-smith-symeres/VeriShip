@page "/{projectNumber}/certifications"
@using Ardalis.Result
@using Microsoft.AspNetCore.Components.Authorization
@using VeriShip.Application.Features.Signals
@using VeriShip.Application.Features.Signals.Models

<PageTitle>@ProjectNumber Certifications</PageTitle>


@code {

    [Parameter] public string ProjectNumber { get; set; } = string.Empty;
    [CascadingParameter] private Task<AuthenticationState>? AuthState { get; set; }
    [Inject] public required ISignalsStore SignalsStore { get; set; }

    private Result<Notebook> NotebookResult { get; set; }
    
    protected override async Task OnParametersSetAsync()
    {
        if (AuthState != null)
        {
            var authState = await AuthState;
            if (authState.User.Identity?.Name != null)
            {
                NotebookResult = await SignalsStore.Query(new GetNotebook(ProjectNumber, authState.User.Identity?.Name));
            }
        }
        
     
    }


}